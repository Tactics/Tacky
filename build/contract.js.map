{"version":3,"sources":["../src/colors/contracts/colors.ts","../src/colors/contracts/color-variant.ts","../src/radius/contracts/radius.ts","../src/typography/contracts/font.ts","../src/typography/contracts/fonts.ts","../src/utility/contracts/spacing.ts"],"names":["Color","ColorKeys","ColorVariant","ColorVariantKeys","Radius","RadiusKeys","TypographyFontWeight","TypographyFontWeightKeys","TypographyFont","TypographyFontKeys","TypographyFonts","TypographyFontsKeys","Spacing","SpacingKeys"],"mappings":"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","file":"contract.js","sourcesContent":["import {\n  ColorVariantConfigI,\n  ColorVariantI,\n} from \"@/colors/contracts/color-variant\";\n\nexport interface BrandingColorsI {\n  primary: ColorVariantI;\n  supporting: ColorVariantI;\n  accent: ColorVariantI;\n  accent2: ColorVariantI;\n  accent3: ColorVariantI;\n  accent4: ColorVariantI;\n  accent5: ColorVariantI;\n}\n\nexport interface BrandingColorsConfigI {\n  primary?: ColorVariantConfigI;\n  accent?: ColorVariantConfigI;\n  accent2?: ColorVariantConfigI;\n  accent3?: ColorVariantConfigI;\n  accent4?: ColorVariantConfigI;\n  accent5?: ColorVariantConfigI;\n  supporting?: ColorVariantConfigI;\n}\n\nexport interface UtilityColorsI {\n  border?: ColorVariantI; // tmp optional, until neutrals are removed\n  text?: ColorVariantI; // tmp optional, until neutrals are removed\n  surfaces: ColorVariantI;\n  skeletons: ColorVariantI;\n}\n\nexport interface UtilityColorsConfigI {\n  skeletons?: ColorVariantConfigI;\n  border?: ColorVariantConfigI;\n  text?: ColorVariantConfigI;\n  surfaces?: ColorVariantConfigI;\n}\n\nexport interface SemanticColorsI {\n  danger: ColorVariantI;\n  warning: ColorVariantI;\n  success: ColorVariantI;\n  info: ColorVariantI;\n}\n\nexport interface SemanticColorsConfigI {\n  danger?: ColorVariantConfigI;\n  warning?: ColorVariantConfigI;\n  success?: ColorVariantConfigI;\n  info?: ColorVariantConfigI;\n}\n\nexport interface ScopeColorsI extends UtilityColorsConfigI, BrandingColorsI {}\nexport interface ScopeColorsConfigI\n  extends UtilityColorsConfigI,\n    BrandingColorsConfigI {}\n\nexport interface AllColorsI\n  extends UtilityColorsI,\n    SemanticColorsI,\n    BrandingColorsI {\n  neutrals: ColorVariantI; // Deprecated\n}\n\n// A common interface for defining a color scheme for a theme.\nexport interface ColorsI extends AllColorsI {\n  scoped?: Record<string, AllColorsI>; // scoped needs to be optional\n}\n\nexport interface ColorsConfigI\n  extends UtilityColorsConfigI,\n    SemanticColorsConfigI,\n    BrandingColorsConfigI {\n  neutrals?: ColorVariantConfigI; // Deprecated\n  scoped?: Record<string, ScopeColorsConfigI>;\n}\n\nexport enum Color {\n  DANGER = \"danger\",\n  WARNING = \"warning\",\n  SUCCESS = \"success\",\n  INFO = \"info\",\n  NEUTRALS = \"neutrals\",\n  SURFACES = \"surfaces\",\n  PRIMARY = \"primary\",\n  SUPPORTING = \"supporting\",\n  ACCENT = \"accent\",\n}\n\nexport const ColorKeys = [\n  Color.DANGER,\n  Color.WARNING,\n  Color.SUCCESS,\n  Color.INFO,\n  Color.NEUTRALS,\n  Color.SURFACES,\n  Color.PRIMARY,\n  Color.SUPPORTING,\n  Color.ACCENT,\n];\n\nexport type ColorKey =\n  | Color.DANGER\n  | Color.WARNING\n  | Color.SUCCESS\n  | Color.INFO\n  | Color.NEUTRALS\n  | Color.SURFACES\n  | Color.PRIMARY\n  | Color.SUPPORTING\n  | Color.ACCENT;\n","import { HexColor } from \"@/colors/contracts/hex\";\n\n// Every color in a color scheme will need different tints of the same color.\n// This makes the theme more vibrant and helps us create contrast and depth.\nexport interface ColorVariantI {\n  tint_50: HexColor;\n  tint_100: HexColor;\n  tint_200: HexColor;\n  tint_300: HexColor;\n  tint_400: HexColor;\n  tint_500: HexColor;\n  tint_600: HexColor;\n  tint_700: HexColor;\n  tint_800: HexColor;\n  tint_900: HexColor;\n  tint_950: HexColor;\n}\n\nexport interface ColorVariantConfigI {\n  tint_50?: HexColor;\n  tint_100?: HexColor;\n  tint_200?: HexColor;\n  tint_300?: HexColor;\n  tint_400?: HexColor;\n  tint_500?: HexColor;\n  tint_600?: HexColor;\n  tint_700?: HexColor;\n  tint_800?: HexColor;\n  tint_900?: HexColor;\n  tint_950?: HexColor;\n}\n\nexport enum ColorVariant {\n  TINT_50 = \"tint_50\",\n  TINT_100 = \"tint_100\",\n  TINT_200 = \"tint_200\",\n  TINT_300 = \"tint_300\",\n  TINT_400 = \"tint_400\",\n  TINT_500 = \"tint_500\",\n  TINT_600 = \"tint_600\",\n  TINT_700 = \"tint_700\",\n  TINT_800 = \"tint_800\",\n  TINT_900 = \"tint_900\",\n  TINT_950 = \"tint_950\",\n}\n\nexport const ColorVariantKeys = [\n  ColorVariant.TINT_50,\n  ColorVariant.TINT_100,\n  ColorVariant.TINT_200,\n  ColorVariant.TINT_300,\n  ColorVariant.TINT_400,\n  ColorVariant.TINT_500,\n  ColorVariant.TINT_600,\n  ColorVariant.TINT_700,\n  ColorVariant.TINT_800,\n  ColorVariant.TINT_900,\n  ColorVariant.TINT_950,\n];\n\nexport type ColorVariantKey =\n  | ColorVariant.TINT_50\n  | ColorVariant.TINT_100\n  | ColorVariant.TINT_200\n  | ColorVariant.TINT_300\n  | ColorVariant.TINT_400\n  | ColorVariant.TINT_500\n  | ColorVariant.TINT_600\n  | ColorVariant.TINT_700\n  | ColorVariant.TINT_800\n  | ColorVariant.TINT_900\n  | ColorVariant.TINT_950;\n","export interface RadiusI {\n  none: string; // 0px\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  \"2xl\": string;\n  \"3xl\": string;\n  full: string; // 9999px\n}\n\n// When setting 1 radius config, you must set all to prevent generated strange config.\n// Since they are all relevant to one another.\nexport interface RadiusConfigI {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  \"2xl\": string;\n  \"3xl\": string;\n}\n\nexport enum Radius {\n  NONE = \"none\",\n  XS = \"xs\",\n  SM = \"sm\",\n  MD = \"md\",\n  LG = \"lg\",\n  XL = \"xl\",\n  XL2 = \"2xl\",\n  XL3 = \"3xl\",\n  FULL = \"full\",\n}\n\nexport const RadiusKeys = [\n  Radius.NONE,\n  Radius.XS,\n  Radius.SM,\n  Radius.MD,\n  Radius.LG,\n  Radius.XL,\n  Radius.XL2,\n  Radius.XL3,\n  Radius.FULL,\n];\nexport type RadiusKey =\n  | Radius.NONE\n  | Radius.XS\n  | Radius.SM\n  | Radius.MD\n  | Radius.LG\n  | Radius.XL\n  | Radius.XL2\n  | Radius.XL3\n  | Radius.FULL;\n","export interface TypographyFontI {\n  xs: TypographyFontWeightI;\n  sm: TypographyFontWeightI;\n  md: TypographyFontWeightI;\n  lg: TypographyFontWeightI;\n  xl: TypographyFontWeightI;\n  \"2xl\": TypographyFontWeightI;\n  \"3xl\": TypographyFontWeightI;\n  \"4xl\": TypographyFontWeightI;\n  \"5xl\": TypographyFontWeightI;\n  \"6xl\": TypographyFontWeightI;\n  \"7xl\": TypographyFontWeightI;\n  \"8xl\": TypographyFontWeightI;\n  \"9xl\": TypographyFontWeightI;\n}\n\nexport interface TypographyFontWeightI {\n  thin: string;\n  xlight: string;\n  light: string;\n  normal: string;\n  medium: string;\n  semibold: string;\n  bold: string;\n  xbold: string;\n  black: string;\n}\n\nexport enum TypographyFontWeight {\n  THIN = \"thin\",\n  XLIGHT = \"xlight\",\n  LIGHT = \"light\",\n  NORMAL = \"normal\",\n  MEDIUM = \"medium\",\n  SEMIBOLD = \"semibold\",\n  BOLD = \"bold\",\n  XBOLD = \"xbold\",\n  BLACK = \"black\",\n}\n\nexport const TypographyFontWeightKeys = [\n  TypographyFontWeight.THIN,\n  TypographyFontWeight.XLIGHT,\n  TypographyFontWeight.LIGHT,\n  TypographyFontWeight.NORMAL,\n  TypographyFontWeight.MEDIUM,\n  TypographyFontWeight.SEMIBOLD,\n  TypographyFontWeight.BOLD,\n  TypographyFontWeight.XBOLD,\n  TypographyFontWeight.BLACK,\n];\n\nexport type TypographyFontWeightKey =\n  | TypographyFontWeight.THIN\n  | TypographyFontWeight.XLIGHT\n  | TypographyFontWeight.LIGHT\n  | TypographyFontWeight.NORMAL\n  | TypographyFontWeight.MEDIUM\n  | TypographyFontWeight.SEMIBOLD\n  | TypographyFontWeight.BOLD\n  | TypographyFontWeight.XBOLD\n  | TypographyFontWeight.BLACK;\n\nexport enum TypographyFont {\n  XS = \"xs\",\n  SM = \"sm\",\n  MD = \"md\",\n  LG = \"lg\",\n  XL = \"xl\",\n  XL2 = \"2xl\",\n  XL3 = \"3xl\",\n  XL4 = \"4xl\",\n  XL5 = \"5xl\",\n  XL6 = \"6xl\",\n  XL7 = \"7xl\",\n  XL8 = \"8xl\",\n  XL9 = \"9xl\",\n}\n\nexport const TypographyFontKeys = [\n  TypographyFont.XS,\n  TypographyFont.SM,\n  TypographyFont.MD,\n  TypographyFont.LG,\n  TypographyFont.XL,\n  TypographyFont.XL2,\n  TypographyFont.XL3,\n  TypographyFont.XL4,\n  TypographyFont.XL5,\n  TypographyFont.XL6,\n  TypographyFont.XL7,\n  TypographyFont.XL8,\n  TypographyFont.XL9,\n];\n\nexport type TypographyFontKey =\n  | TypographyFont.XS\n  | TypographyFont.SM\n  | TypographyFont.MD\n  | TypographyFont.LG\n  | TypographyFont.XL\n  | TypographyFont.XL2\n  | TypographyFont.XL3\n  | TypographyFont.XL4\n  | TypographyFont.XL5\n  | TypographyFont.XL6\n  | TypographyFont.XL7\n  | TypographyFont.XL8\n  | TypographyFont.XL9;\n","import { TypographyFontI } from \"@/typography/contracts/font\";\nimport { TypographyFontsScaleConfigI } from \"@/typography/contracts/scale\";\nimport { TypographyFontsFamilyConfigI } from \"@/typography/contracts/family\";\n\nexport interface TypographyFontsI {\n  primary: TypographyFontI;\n  accent: TypographyFontI;\n  supporting: TypographyFontI;\n}\n\nexport interface TypographyFontsConfigI {\n  family?: TypographyFontsFamilyConfigI;\n  scale?: TypographyFontsScaleConfigI;\n}\n\nexport enum TypographyFonts {\n  PRIMARY = \"primary\",\n  SUPPORTING = \"supporting\",\n  ACCENT = \"accent\",\n}\n\nexport const TypographyFontsKeys = [\n  TypographyFonts.PRIMARY,\n  TypographyFonts.SUPPORTING,\n  TypographyFonts.ACCENT,\n];\nexport type TypographyFontsKey =\n  | TypographyFonts.PRIMARY\n  | TypographyFonts.SUPPORTING\n  | TypographyFonts.ACCENT;\n","interface SpacingI {\n  0: string;\n  px: string;\n  0.5: string;\n  1: string;\n  1.5: string;\n  2: string;\n  2.5: string;\n  3: string;\n  3.5: string;\n  4: string;\n  5: string;\n  6: string;\n  7: string;\n  8: string;\n  9: string;\n  10: string;\n  11: string;\n  12: string;\n  14: string;\n  16: string;\n  20: string;\n  24: string;\n  28: string;\n  32: string;\n  36: string;\n  40: string;\n  44: string;\n  48: string;\n  52: string;\n  56: string;\n  60: string;\n  64: string;\n  72: string;\n  80: string;\n  96: string;\n}\n\nexport enum Spacing {\n  S0 = \"0\",\n  PX = \"px\",\n  S05 = \"0.5\",\n  S10 = \"1\",\n  S15 = \"1.5\",\n  S20 = \"2\",\n  S25 = \"2.5\",\n  S30 = \"3\",\n  S40 = \"4\",\n  S50 = \"5\",\n  S60 = \"6\",\n  S70 = \"7\",\n  S80 = \"8\",\n  S90 = \"9\",\n  S100 = \"10\",\n  S110 = \"11\",\n  S120 = \"12\",\n  S140 = \"14\",\n  S160 = \"16\",\n  S200 = \"20\",\n  S320 = \"32\",\n  S360 = \"36\",\n  S400 = \"40\",\n  S440 = \"44\",\n  S480 = \"48\",\n  S520 = \"52\",\n  S560 = \"56\",\n  S600 = \"60\",\n  S640 = \"64\",\n  S720 = \"72\",\n  S800 = \"80\",\n  S960 = \"96\",\n}\n\nexport const SpacingKeys = [\n  Spacing.S0,\n  Spacing.PX,\n  Spacing.S05,\n  Spacing.S10,\n  Spacing.S15,\n  Spacing.S20,\n  Spacing.S25,\n  Spacing.S30,\n  Spacing.S40,\n  Spacing.S50,\n  Spacing.S60,\n  Spacing.S70,\n  Spacing.S80,\n  Spacing.S90,\n  Spacing.S100,\n  Spacing.S110,\n  Spacing.S120,\n  Spacing.S140,\n  Spacing.S160,\n  Spacing.S200,\n  Spacing.S320,\n  Spacing.S360,\n  Spacing.S400,\n  Spacing.S440,\n  Spacing.S480,\n  Spacing.S520,\n  Spacing.S560,\n  Spacing.S600,\n  Spacing.S640,\n  Spacing.S720,\n  Spacing.S800,\n  Spacing.S960,\n];\nexport type SpacingKey =\n  | Spacing.S0\n  | Spacing.PX\n  | Spacing.S05\n  | Spacing.S10\n  | Spacing.S15\n  | Spacing.S20\n  | Spacing.S25\n  | Spacing.S30\n  | Spacing.S40\n  | Spacing.S50\n  | Spacing.S60\n  | Spacing.S70\n  | Spacing.S80\n  | Spacing.S90\n  | Spacing.S100\n  | Spacing.S110\n  | Spacing.S120\n  | Spacing.S140\n  | Spacing.S160\n  | Spacing.S200\n  | Spacing.S320\n  | Spacing.S360\n  | Spacing.S400\n  | Spacing.S440\n  | Spacing.S480\n  | Spacing.S520\n  | Spacing.S560\n  | Spacing.S600\n  | Spacing.S640\n  | Spacing.S720\n  | Spacing.S800\n  | Spacing.S960;\n\nexport type { SpacingI };\n"]}