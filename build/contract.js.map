{"version":3,"sources":["../src/colors/contracts/color-variant.ts","../src/radius/contracts/radius.ts","../src/typography/contracts/font.ts","../src/typography/contracts/fonts.ts","../src/utility/contracts/spacing.ts"],"names":["ColorVariant","ColorVariantKeys","Radius","RadiusKeys","TypographyFontKeys","TypographyFontsKeys","Spacing","SpacingKeys"],"mappings":"AAgCO,IAAKA,OACVA,EAAA,QAAU,UACVA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,SAAW,WAXDA,OAAA,IAcCC,EAAmB,CAC9B,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACF,EClCO,IAAKC,OACVA,EAAA,KAAO,OACPA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,IAAM,MACNA,EAAA,IAAM,MACNA,EAAA,KAAO,OATGA,OAAA,IAYCC,EAAa,CACxB,OACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACF,EC9BO,IAAMC,EAAqB,CAChC,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACF,ECfO,IAAMC,EAAsB,CAAC,UAAW,aAAc,QAAQ,ECuB9D,IAAKC,OACVA,EAAA,GAAK,IACLA,EAAA,GAAK,KACLA,EAAA,IAAM,MACNA,EAAA,IAAM,IACNA,EAAA,IAAM,MACNA,EAAA,IAAM,IACNA,EAAA,IAAM,MACNA,EAAA,IAAM,IACNA,EAAA,IAAM,IACNA,EAAA,IAAM,IACNA,EAAA,IAAM,IACNA,EAAA,IAAM,IACNA,EAAA,IAAM,IACNA,EAAA,IAAM,IACNA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KACPA,EAAA,KAAO,KAhCGA,OAAA,IAmCCC,EAAc,CACzB,IACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACF","sourcesContent":["import { HexColor } from \"@/colors/contracts/hex\";\n\n// Every color in a color scheme will need different tints of the same color.\n// This makes the theme more vibrant and helps us create contrast and depth.\nexport interface ColorVariantI {\n  tint_50: HexColor;\n  tint_100: HexColor;\n  tint_200: HexColor;\n  tint_300: HexColor;\n  tint_400: HexColor;\n  tint_500: HexColor;\n  tint_600: HexColor;\n  tint_700: HexColor;\n  tint_800: HexColor;\n  tint_900: HexColor;\n  tint_950: HexColor;\n}\n\nexport interface ColorVariantConfigI {\n  tint_50?: HexColor;\n  tint_100?: HexColor;\n  tint_200?: HexColor;\n  tint_300?: HexColor;\n  tint_400?: HexColor;\n  tint_500?: HexColor;\n  tint_600?: HexColor;\n  tint_700?: HexColor;\n  tint_800?: HexColor;\n  tint_900?: HexColor;\n  tint_950?: HexColor;\n}\n\nexport enum ColorVariant {\n  TINT_50 = \"tint_50\",\n  TINT_100 = \"tint_100\",\n  TINT_200 = \"tint_200\",\n  TINT_300 = \"tint_300\",\n  TINT_400 = \"tint_400\",\n  TINT_500 = \"tint_500\",\n  TINT_600 = \"tint_600\",\n  TINT_700 = \"tint_700\",\n  TINT_800 = \"tint_800\",\n  TINT_900 = \"tint_900\",\n  TINT_950 = \"tint_950\",\n}\n\nexport const ColorVariantKeys = [\n  ColorVariant.TINT_50,\n  ColorVariant.TINT_100,\n  ColorVariant.TINT_200,\n  ColorVariant.TINT_300,\n  ColorVariant.TINT_400,\n  ColorVariant.TINT_500,\n  ColorVariant.TINT_600,\n  ColorVariant.TINT_700,\n  ColorVariant.TINT_800,\n  ColorVariant.TINT_900,\n  ColorVariant.TINT_950,\n];\n\nexport type ColorVariantKey =\n  | ColorVariant.TINT_50\n  | ColorVariant.TINT_100\n  | ColorVariant.TINT_200\n  | ColorVariant.TINT_300\n  | ColorVariant.TINT_400\n  | ColorVariant.TINT_500\n  | ColorVariant.TINT_600\n  | ColorVariant.TINT_700\n  | ColorVariant.TINT_800\n  | ColorVariant.TINT_900\n  | ColorVariant.TINT_950;\n","export interface RadiusI {\n  none: string; // 0px\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  \"2xl\": string;\n  \"3xl\": string;\n  full: string; // 9999px\n}\n\n// When setting 1 radius config, you must set all to prevent generated strange config.\n// Since they are all relevant to one another.\nexport interface RadiusConfigI {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  \"2xl\": string;\n  \"3xl\": string;\n}\n\nexport enum Radius {\n  NONE = \"none\",\n  XS = \"xs\",\n  SM = \"sm\",\n  MD = \"md\",\n  LG = \"lg\",\n  XL = \"xl\",\n  XL2 = \"2xl\",\n  XL3 = \"3xl\",\n  FULL = \"full\",\n}\n\nexport const RadiusKeys = [\n  Radius.NONE,\n  Radius.XS,\n  Radius.SM,\n  Radius.MD,\n  Radius.LG,\n  Radius.XL,\n  Radius.XL2,\n  Radius.XL3,\n  Radius.FULL,\n];\nexport type RadiusKey =\n  | Radius.NONE\n  | Radius.XS\n  | Radius.SM\n  | Radius.MD\n  | Radius.LG\n  | Radius.XL\n  | Radius.XL2\n  | Radius.XL3\n  | Radius.FULL;\n","export interface TypographyFontI {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  \"2xl\": string;\n  \"3xl\": string;\n  \"4xl\": string;\n  \"5xl\": string;\n  \"6xl\": string;\n  \"7xl\": string;\n  \"8xl\": string;\n  \"9xl\": string;\n}\n\nexport const TypographyFontKeys = [\n  \"xs\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\",\n  \"3xl\",\n  \"4xl\",\n  \"5xl\",\n  \"6xl\",\n  \"7xl\",\n  \"8xl\",\n  \"9xl\",\n];\nexport type TypographyFontKey =\n  | \"xs\"\n  | \"sm\"\n  | \"md\"\n  | \"lg\"\n  | \"xl\"\n  | \"2xl\"\n  | \"3xl\"\n  | \"4xl\"\n  | \"5xl\"\n  | \"6xl\"\n  | \"7xl\"\n  | \"8xl\"\n  | \"9xl\";\n","import { TypographyFontI } from \"@/typography/contracts/font\";\nimport { TypographyFontsScaleConfigI } from \"@/typography/contracts/scale\";\nimport { TypographyFontsFamilyConfigI } from \"@/typography/contracts/family\";\n\nexport interface TypographyFontsI {\n  primary: TypographyFontI;\n  accent: TypographyFontI;\n  supporting: TypographyFontI;\n}\n\nexport interface TypographyFontsConfigI {\n  family?: TypographyFontsFamilyConfigI;\n  scale?: TypographyFontsScaleConfigI;\n}\n\nexport const TypographyFontsKeys = [\"primary\", \"supporting\", \"accent\"];\nexport type TypographyFontsKey = \"primary\" | \"supporting\" | \"accent\";\n","interface SpacingI {\n  0: string;\n  px: string;\n  0.5: string;\n  1: string;\n  1.5: string;\n  2: string;\n  2.5: string;\n  3: string;\n  3.5: string;\n  4: string;\n  5: string;\n  6: string;\n  7: string;\n  8: string;\n  9: string;\n  10: string;\n  11: string;\n  12: string;\n  14: string;\n  16: string;\n  20: string;\n  24: string;\n  28: string;\n  32: string;\n  36: string;\n  40: string;\n  44: string;\n  48: string;\n  52: string;\n  56: string;\n  60: string;\n  64: string;\n  72: string;\n  80: string;\n  96: string;\n}\n\nexport enum Spacing {\n  S0 = \"0\",\n  PX = \"px\",\n  S05 = \"0.5\",\n  S10 = \"1\",\n  S15 = \"1.5\",\n  S20 = \"2\",\n  S25 = \"2.5\",\n  S30 = \"3\",\n  S40 = \"4\",\n  S50 = \"5\",\n  S60 = \"6\",\n  S70 = \"7\",\n  S80 = \"8\",\n  S90 = \"9\",\n  S100 = \"10\",\n  S110 = \"11\",\n  S120 = \"12\",\n  S140 = \"14\",\n  S160 = \"16\",\n  S200 = \"20\",\n  S320 = \"32\",\n  S360 = \"36\",\n  S400 = \"40\",\n  S440 = \"44\",\n  S480 = \"48\",\n  S520 = \"52\",\n  S560 = \"56\",\n  S600 = \"60\",\n  S640 = \"64\",\n  S720 = \"72\",\n  S800 = \"80\",\n  S960 = \"96\",\n}\n\nexport const SpacingKeys = [\n  Spacing.S0,\n  Spacing.PX,\n  Spacing.S05,\n  Spacing.S10,\n  Spacing.S15,\n  Spacing.S20,\n  Spacing.S25,\n  Spacing.S30,\n  Spacing.S40,\n  Spacing.S50,\n  Spacing.S60,\n  Spacing.S70,\n  Spacing.S80,\n  Spacing.S90,\n  Spacing.S100,\n  Spacing.S110,\n  Spacing.S120,\n  Spacing.S140,\n  Spacing.S160,\n  Spacing.S200,\n  Spacing.S320,\n  Spacing.S360,\n  Spacing.S400,\n  Spacing.S440,\n  Spacing.S480,\n  Spacing.S520,\n  Spacing.S560,\n  Spacing.S600,\n  Spacing.S640,\n  Spacing.S720,\n  Spacing.S800,\n  Spacing.S960,\n];\nexport type SpacingKey =\n  | Spacing.S0\n  | Spacing.PX\n  | Spacing.S05\n  | Spacing.S10\n  | Spacing.S15\n  | Spacing.S20\n  | Spacing.S25\n  | Spacing.S30\n  | Spacing.S40\n  | Spacing.S50\n  | Spacing.S60\n  | Spacing.S70\n  | Spacing.S80\n  | Spacing.S90\n  | Spacing.S100\n  | Spacing.S110\n  | Spacing.S120\n  | Spacing.S140\n  | Spacing.S160\n  | Spacing.S200\n  | Spacing.S320\n  | Spacing.S360\n  | Spacing.S400\n  | Spacing.S440\n  | Spacing.S480\n  | Spacing.S520\n  | Spacing.S560\n  | Spacing.S600\n  | Spacing.S640\n  | Spacing.S720\n  | Spacing.S800\n  | Spacing.S960;\n\nexport type { SpacingI };\n"]}