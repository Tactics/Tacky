{"version":3,"sources":["../src/tooling/build-provider-tree.tsx","../src/alternate/functions/alternate.ts","../src/colors/functions/additional.ts"],"names":["React","BuildProvidersTree","componentsWithProps","initialComponent","children","AccumulatedComponents","Provider","props","LookupAlternate","name","alternates","item","LookupAdditionalColor","colors","fallback","lookup"],"mappings":"yCAAA,OAAOA,MAAW,QAElB,IAAMC,EAAsBC,GAA6B,CACvD,IAAMC,EAAmB,CAAC,CAAE,SAAAC,CAAS,IAAWJ,EAAA,cAAAA,EAAA,cAAE,IAAEI,EAAS,GAAC,EAC9D,OAAOF,EAAoB,OACzB,CAACG,EAA4B,CAACC,EAAUC,EAAQ,CAAC,CAAC,IACzC,CAAC,CAAE,SAAAH,CAAS,IAEfJ,EAAA,cAACK,EAAA,KACCL,EAAA,cAACM,EAAA,CAAU,GAAGC,GAAQH,CAAS,CACjC,EAIND,CACF,CACF,ECdO,IAAMK,EAAkB,CAAC,CAC9B,KAAAC,EACA,WAAAC,CACF,IAISA,EAAW,KAAMC,GAASA,EAAK,OAASF,CAAI,ECNrD,IAAMG,EAAwB,CAAC,CAC7B,KAAAH,EACA,OAAAI,EACA,SAAAC,CACF,IAIgB,CACd,IAAMC,EAASF,EAAO,KAAMF,GAASA,EAAK,OAASF,CAAI,EACvD,OAAOM,EAASA,EAAO,MAAQD,CACjC","sourcesContent":["import React from \"react\";\n\nconst BuildProvidersTree = (componentsWithProps: any) => {\n  const initialComponent = ({ children }: any) => <> {children} </>;\n  return componentsWithProps.reduce(\n    (AccumulatedComponents: any, [Provider, props = {}]: any) => {\n      return ({ children }: any) => {\n        return (\n          <AccumulatedComponents>\n            <Provider {...props}>{children}</Provider>\n          </AccumulatedComponents>\n        );\n      };\n    },\n    initialComponent\n  );\n};\n\nexport { BuildProvidersTree };\n","import { AlternateItem } from \"../contracts/alternate\";\n\nexport const LookupAlternate = ({\n  name,\n  alternates,\n}: {\n  name: string;\n  alternates: Array<AlternateItem>;\n}): AlternateItem | undefined => {\n  return alternates.find((item) => item.name === name);\n};\n","import { HexColor } from \"../contracts/hex\";\nimport { AdditionalColorItem } from \"../contracts/color-additional\";\n\nconst LookupAdditionalColor = ({\n  name,\n  colors,\n  fallback,\n}: {\n  name: string;\n  colors: AdditionalColorItem[];\n  fallback: HexColor;\n}): HexColor => {\n  const lookup = colors.find((item) => item.name === name);\n  return lookup ? lookup.color : fallback;\n};\n\nexport { LookupAdditionalColor };\n"]}